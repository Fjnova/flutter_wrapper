#!/usr/bin/env sh

##############################################################################
##
##  Flutter start up script for UN*X
##  Version: VERSION_PLACEHOLDER
##  Date: DATE_PLACEHOLDER
##
##  Use this flutter wrapper to bundle Flutter within your project to make
##  sure everybody builds with the same version.
##
##  Read about the install and uninstall process in the README on GitHub
##  https://github.com/passsy/flutter_wrapper
##
##  Inspired by gradle-wrapper.
##
##############################################################################


# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

FLUTTER_DIR_NAME='.flutter'
FLUTTER_DIR="$APP_HOME/$FLUTTER_DIR_NAME"

# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
  cd "$(dirname "$0")"
fi

# submodule starting with "-" are not initialized
init_status=`git submodule | grep "\ \.flutter$" | cut -c 1`

# Fix not initialized flutter submodule
if [ "$init_status" = "-" ]; then
  echo ".flutter submodule not initialized. Initializing..."
  git submodule update --init .flutter
fi

# Detect detach HEAD and fix it. commands like upgrade expect a valid branch, not a detached HEAD
FLUTTER_SYMBOLIC_REF=`git -C .flutter symbolic-ref -q HEAD`
if [ -z $FLUTTER_SYMBOLIC_REF ]; then
  echo "Warning: Detected detached HEAD. '.flutter' submodule points to a specific commit, not a branch."
  echo "You can ignore this warning when you run './flutterw' for the first time after cloning the repository."
  FLUTTER_REV=`git -C .flutter rev-parse HEAD`
  FLUTTER_CHANNEL=`git config -f .gitmodules submodule.\.flutter.branch`
  if git -C .flutter branch --contains $FLUTTER_REV | grep $FLUTTER_CHANNEL > /dev/null; then
    echo "Fixing detached HEAD $FLUTTER_REV. Binding it to channel '$FLUTTER_CHANNEL' (as defined in .gitmodules)."
    git -C .flutter branch -q -f $FLUTTER_CHANNEL $FLUTTER_REV
    git -C .flutter checkout -q $FLUTTER_CHANNEL
    echo "Fixed! './flutterw upgrade' now works without problems!"
  else
    echo "Warning: Commit $FLUTTER_REV in submodule '.flutter' is not part of the branch '$FLUTTER_CHANNEL' as defined in .gitmodules"
    echo "You have to manually switch to a valid branch (i.e. './flutterw channel stable') or './flutterw upgrade' will fail"
    echo "Alternatively change the branch '$FLUTTER_CHANNEL' in .gitmodules to the correct upstream branch (one of stable|beta|dev)."
  fi
fi


# Wrapper tasks done, call flutter binay with all args
set -e
"$FLUTTER_DIR/bin/flutter" "$@"
